"""Remove employee management features: attendance, leave, tasks, performance

Revision ID: aa441c33951a
Revises: b30dda7087be
Create Date: 2025-10-07 00:02:49.195959

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'aa441c33951a'
down_revision = 'b30dda7087be'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('task', schema=None) as batch_op:
        batch_op.drop_index('ix_task_assigned_to')
        batch_op.drop_index('ix_task_due_date')

    op.drop_table('task')
    with op.batch_alter_table('performance_metric', schema=None) as batch_op:
        batch_op.drop_index('idx_performance_employee_date')
        batch_op.drop_index('ix_performance_metric_employee_id')
        batch_op.drop_index('ix_performance_metric_metric_date')

    op.drop_table('performance_metric')
    with op.batch_alter_table('leave', schema=None) as batch_op:
        batch_op.drop_index('ix_leave_employee_id')
        batch_op.drop_index('ix_leave_end_date')
        batch_op.drop_index('ix_leave_start_date')

    op.drop_table('leave')
    with op.batch_alter_table('attendance', schema=None) as batch_op:
        batch_op.drop_index('idx_attendance_employee_date')
        batch_op.drop_index('ix_attendance_date')
        batch_op.drop_index('ix_attendance_employee_id')

    op.drop_table('attendance')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('attendance',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('employee_id', sa.INTEGER(), nullable=False),
    sa.Column('date', sa.DATE(), nullable=False),
    sa.Column('status', sa.VARCHAR(length=8), nullable=False),
    sa.Column('check_in_time', sa.TIME(), nullable=True),
    sa.Column('check_out_time', sa.TIME(), nullable=True),
    sa.Column('working_hours', sa.NUMERIC(precision=4, scale=2), nullable=True),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.Column('created_by', sa.INTEGER(), nullable=True),
    sa.Column('updated_by', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('attendance', schema=None) as batch_op:
        batch_op.create_index('ix_attendance_employee_id', ['employee_id'], unique=False)
        batch_op.create_index('ix_attendance_date', ['date'], unique=False)
        batch_op.create_index('idx_attendance_employee_date', ['employee_id', 'date'], unique=1)

    op.create_table('leave',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('employee_id', sa.INTEGER(), nullable=False),
    sa.Column('leave_type', sa.VARCHAR(length=9), nullable=False),
    sa.Column('start_date', sa.DATE(), nullable=False),
    sa.Column('end_date', sa.DATE(), nullable=False),
    sa.Column('days_requested', sa.NUMERIC(precision=4, scale=1), nullable=False),
    sa.Column('reason', sa.TEXT(), nullable=True),
    sa.Column('status', sa.VARCHAR(length=9), nullable=False),
    sa.Column('approved_by', sa.INTEGER(), nullable=True),
    sa.Column('approved_at', sa.DATETIME(), nullable=True),
    sa.Column('comments', sa.TEXT(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.Column('created_by', sa.INTEGER(), nullable=True),
    sa.Column('updated_by', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['approved_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('leave', schema=None) as batch_op:
        batch_op.create_index('ix_leave_start_date', ['start_date'], unique=False)
        batch_op.create_index('ix_leave_end_date', ['end_date'], unique=False)
        batch_op.create_index('ix_leave_employee_id', ['employee_id'], unique=False)

    op.create_table('performance_metric',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('employee_id', sa.INTEGER(), nullable=False),
    sa.Column('metric_date', sa.DATE(), nullable=False),
    sa.Column('leads_assigned', sa.INTEGER(), nullable=False),
    sa.Column('leads_converted', sa.INTEGER(), nullable=False),
    sa.Column('bookings_completed', sa.INTEGER(), nullable=False),
    sa.Column('revenue_generated', sa.NUMERIC(precision=10, scale=2), nullable=False),
    sa.Column('follow_ups_done', sa.INTEGER(), nullable=False),
    sa.Column('customer_satisfaction', sa.NUMERIC(precision=3, scale=1), nullable=True),
    sa.Column('tasks_completed', sa.INTEGER(), nullable=False),
    sa.Column('attendance_percentage', sa.NUMERIC(precision=5, scale=2), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('performance_metric', schema=None) as batch_op:
        batch_op.create_index('ix_performance_metric_metric_date', ['metric_date'], unique=False)
        batch_op.create_index('ix_performance_metric_employee_id', ['employee_id'], unique=False)
        batch_op.create_index('idx_performance_employee_date', ['employee_id', 'metric_date'], unique=1)

    op.create_table('task',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('title', sa.VARCHAR(length=200), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('assigned_to', sa.INTEGER(), nullable=False),
    sa.Column('assigned_by', sa.INTEGER(), nullable=False),
    sa.Column('priority', sa.VARCHAR(length=6), nullable=False),
    sa.Column('status', sa.VARCHAR(length=11), nullable=False),
    sa.Column('due_date', sa.DATE(), nullable=True),
    sa.Column('completed_at', sa.DATETIME(), nullable=True),
    sa.Column('lead_id', sa.VARCHAR(length=20), nullable=True),
    sa.Column('booking_id', sa.INTEGER(), nullable=True),
    sa.Column('customer_id', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.Column('created_by', sa.INTEGER(), nullable=True),
    sa.Column('updated_by', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['assigned_to'], ['employee.id'], ),
    sa.ForeignKeyConstraint(['booking_id'], ['booking.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customer.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('task', schema=None) as batch_op:
        batch_op.create_index('ix_task_due_date', ['due_date'], unique=False)
        batch_op.create_index('ix_task_assigned_to', ['assigned_to'], unique=False)

    # ### end Alembic commands ###
