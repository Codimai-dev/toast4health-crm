"""Initial migration

Revision ID: 3ac634c059cc
Revises: 
Create Date: 2025-09-06 13:12:40.240090

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '3ac634c059cc'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('full_name', sa.String(length=100), nullable=False),
    sa.Column('role', sa.Enum('ADMIN', 'SALES', 'OPS', 'FINANCE', 'VIEWER', name='userrole'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)

    op.create_table('audit_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('entity', sa.String(length=50), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.Enum('CREATE', 'UPDATE', 'DELETE', name='auditaction'), nullable=False),
    sa.Column('changed_fields', sa.Text(), nullable=True),
    sa.Column('actor_id', sa.Integer(), nullable=False),
    sa.Column('at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['actor_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('audit_log', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_audit_log_at'), ['at'], unique=False)

    op.create_table('b2b_lead',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sr_no', sa.String(length=20), nullable=True),
    sa.Column('t4h_spoc', sa.String(length=100), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('organization_name', sa.String(length=200), nullable=False),
    sa.Column('organization_email', sa.String(length=120), nullable=True),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.Column('type_of_leads', sa.String(length=100), nullable=True),
    sa.Column('org_poc_name_and_role', sa.String(length=200), nullable=True),
    sa.Column('employee_size', sa.String(length=50), nullable=True),
    sa.Column('employee_wellness_program', sa.String(length=100), nullable=True),
    sa.Column('budget_of_wellness_program', sa.String(length=100), nullable=True),
    sa.Column('last_wellness_activity_done', sa.String(length=200), nullable=True),
    sa.Column('email1', sa.String(length=120), nullable=True),
    sa.Column('email2', sa.String(length=120), nullable=True),
    sa.Column('email3', sa.String(length=120), nullable=True),
    sa.Column('email4', sa.String(length=120), nullable=True),
    sa.Column('email5', sa.String(length=120), nullable=True),
    sa.Column('meeting1', sa.Date(), nullable=True),
    sa.Column('meeting1_notes', sa.Text(), nullable=True),
    sa.Column('meeting1_task_done', sa.Text(), nullable=True),
    sa.Column('meeting2', sa.Date(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('task_done', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('b2b_lead', schema=None) as batch_op:
        batch_op.create_index('idx_b2b_lead_org_email_status', ['organization_name', 'organization_email', 'status'], unique=False)
        batch_op.create_index(batch_op.f('ix_b2b_lead_date'), ['date'], unique=False)
        batch_op.create_index(batch_op.f('ix_b2b_lead_organization_email'), ['organization_email'], unique=False)
        batch_op.create_index(batch_op.f('ix_b2b_lead_organization_name'), ['organization_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_b2b_lead_status'), ['status'], unique=False)

    op.create_table('b2c_lead',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('enquiry_id', sa.String(length=20), nullable=False),
    sa.Column('customer_name', sa.String(length=100), nullable=False),
    sa.Column('contact_no', sa.String(length=20), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('enquiry_date', sa.Date(), nullable=False),
    sa.Column('source', sa.String(length=50), nullable=True),
    sa.Column('services', sa.String(length=200), nullable=True),
    sa.Column('referred_by', sa.String(length=100), nullable=True),
    sa.Column('status', sa.Enum('NEW', 'FOLLOW_UP', 'PROSPECT', 'CONVERTED', 'LOST', name='leadstatus'), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('followup1', sa.Date(), nullable=True),
    sa.Column('followup1_detail', sa.Text(), nullable=True),
    sa.Column('followup2', sa.Date(), nullable=True),
    sa.Column('followup2_detail', sa.Text(), nullable=True),
    sa.Column('followup3', sa.Date(), nullable=True),
    sa.Column('followup3_detail', sa.Text(), nullable=True),
    sa.Column('customer_id', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('b2c_lead', schema=None) as batch_op:
        batch_op.create_index('idx_b2c_lead_enquiry_email_contact_status', ['enquiry_id', 'email', 'contact_no', 'status'], unique=False)
        batch_op.create_index(batch_op.f('ix_b2c_lead_contact_no'), ['contact_no'], unique=False)
        batch_op.create_index(batch_op.f('ix_b2c_lead_email'), ['email'], unique=False)
        batch_op.create_index(batch_op.f('ix_b2c_lead_enquiry_date'), ['enquiry_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_b2c_lead_enquiry_id'), ['enquiry_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_b2c_lead_status'), ['status'], unique=False)

    op.create_table('channel_partner',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('partner_code', sa.String(length=20), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('contact_no', sa.String(length=20), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('created_date', sa.Date(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('channel_partner', schema=None) as batch_op:
        batch_op.create_index('idx_channel_partner_name_contact_email', ['name', 'contact_no', 'email'], unique=False)
        batch_op.create_index(batch_op.f('ix_channel_partner_contact_no'), ['contact_no'], unique=False)
        batch_op.create_index(batch_op.f('ix_channel_partner_email'), ['email'], unique=False)
        batch_op.create_index(batch_op.f('ix_channel_partner_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_channel_partner_partner_code'), ['partner_code'], unique=True)

    op.create_table('employee',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_code', sa.String(length=20), nullable=False),
    sa.Column('employ_type', sa.String(length=50), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('contact_no', sa.String(length=20), nullable=False),
    sa.Column('dob', sa.Date(), nullable=True),
    sa.Column('degree', sa.String(length=100), nullable=True),
    sa.Column('temporary_address', sa.Text(), nullable=True),
    sa.Column('permanent_address', sa.Text(), nullable=True),
    sa.Column('employ_image', sa.String(length=200), nullable=True),
    sa.Column('aadhar_no', sa.String(length=20), nullable=True),
    sa.Column('total_experience', sa.String(length=50), nullable=True),
    sa.Column('skill_set', sa.Text(), nullable=True),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', 'OTHER', name='gender'), nullable=True),
    sa.Column('designation', sa.String(length=100), nullable=True),
    sa.Column('whatsapp_no', sa.String(length=20), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('pdf_link', sa.String(length=200), nullable=True),
    sa.Column('bank_name', sa.String(length=100), nullable=True),
    sa.Column('branch_name', sa.String(length=100), nullable=True),
    sa.Column('account_no', sa.String(length=50), nullable=True),
    sa.Column('ifsc_code', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('employee', schema=None) as batch_op:
        batch_op.create_index('idx_employee_name_email_contact_designation', ['name', 'email', 'contact_no', 'designation'], unique=False)
        batch_op.create_index(batch_op.f('ix_employee_contact_no'), ['contact_no'], unique=False)
        batch_op.create_index(batch_op.f('ix_employee_designation'), ['designation'], unique=False)
        batch_op.create_index(batch_op.f('ix_employee_email'), ['email'], unique=False)
        batch_op.create_index(batch_op.f('ix_employee_employee_code'), ['employee_code'], unique=True)
        batch_op.create_index(batch_op.f('ix_employee_name'), ['name'], unique=False)

    op.create_table('setting',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group', sa.String(length=50), nullable=False),
    sa.Column('key', sa.String(length=100), nullable=False),
    sa.Column('value', sa.String(length=200), nullable=False),
    sa.Column('sort_order', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('setting', schema=None) as batch_op:
        batch_op.create_index('idx_setting_group_key', ['group', 'key'], unique=True)

    op.create_table('booking',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('booking_code', sa.String(length=20), nullable=False),
    sa.Column('customer_mob', sa.String(length=20), nullable=False),
    sa.Column('customer_name', sa.String(length=100), nullable=False),
    sa.Column('services', sa.String(length=200), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('service_charge', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('other_expanse', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('gst_percentage', sa.Integer(), nullable=False),
    sa.Column('gst_value', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('total_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('amount_paid', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('pending_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('last_payment_date', sa.Date(), nullable=True),
    sa.Column('employee_assigned_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['employee_assigned_id'], ['employee.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('booking', schema=None) as batch_op:
        batch_op.create_index('idx_booking_code_customer_date', ['booking_code', 'customer_name', 'start_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_booking_booking_code'), ['booking_code'], unique=True)
        batch_op.create_index(batch_op.f('ix_booking_customer_name'), ['customer_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_booking_start_date'), ['start_date'], unique=False)

    op.create_table('customer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_code', sa.String(length=20), nullable=False),
    sa.Column('services', sa.String(length=200), nullable=True),
    sa.Column('customer_name', sa.String(length=100), nullable=False),
    sa.Column('contact_no', sa.String(length=20), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('channel_partner_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['channel_partner_id'], ['channel_partner.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('customer', schema=None) as batch_op:
        batch_op.create_index('idx_customer_name_contact_email', ['customer_name', 'contact_no', 'email'], unique=False)
        batch_op.create_index(batch_op.f('ix_customer_contact_no'), ['contact_no'], unique=False)
        batch_op.create_index(batch_op.f('ix_customer_customer_code'), ['customer_code'], unique=True)
        batch_op.create_index(batch_op.f('ix_customer_customer_name'), ['customer_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_customer_email'), ['email'], unique=False)

    op.create_table('follow_up',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lead_type', sa.Enum('B2C', 'B2B', name='leadtype'), nullable=False),
    sa.Column('b2c_lead_id', sa.Integer(), nullable=True),
    sa.Column('b2b_lead_id', sa.Integer(), nullable=True),
    sa.Column('follow_up_on', sa.Date(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('outcome', sa.Enum('CALLED', 'WHATSAPP', 'EMAIL', 'MEETING', 'SCHEDULED', 'NO_RESPONSE', 'OTHER', name='followupoutcome'), nullable=False),
    sa.Column('next_follow_up_on', sa.Date(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('(b2c_lead_id IS NOT NULL AND b2b_lead_id IS NULL) OR (b2c_lead_id IS NULL AND b2b_lead_id IS NOT NULL)', name='check_exactly_one_lead'),
    sa.ForeignKeyConstraint(['b2b_lead_id'], ['b2b_lead.id'], ),
    sa.ForeignKeyConstraint(['b2c_lead_id'], ['b2c_lead.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('follow_up', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_follow_up_follow_up_on'), ['follow_up_on'], unique=False)

    op.create_table('expense',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('expense_code', sa.String(length=20), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('booking_id', sa.Integer(), nullable=True),
    sa.Column('other_id', sa.String(length=50), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=False),
    sa.Column('sub_category', sa.String(length=100), nullable=True),
    sa.Column('expense_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['booking_id'], ['booking.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('expense', schema=None) as batch_op:
        batch_op.create_index('idx_expense_date_category_booking', ['date', 'category', 'booking_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_expense_booking_id'), ['booking_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_expense_category'), ['category'], unique=False)
        batch_op.create_index(batch_op.f('ix_expense_date'), ['date'], unique=False)
        batch_op.create_index(batch_op.f('ix_expense_expense_code'), ['expense_code'], unique=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('expense', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_expense_expense_code'))
        batch_op.drop_index(batch_op.f('ix_expense_date'))
        batch_op.drop_index(batch_op.f('ix_expense_category'))
        batch_op.drop_index(batch_op.f('ix_expense_booking_id'))
        batch_op.drop_index('idx_expense_date_category_booking')

    op.drop_table('expense')
    with op.batch_alter_table('follow_up', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_follow_up_follow_up_on'))

    op.drop_table('follow_up')
    with op.batch_alter_table('customer', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_customer_email'))
        batch_op.drop_index(batch_op.f('ix_customer_customer_name'))
        batch_op.drop_index(batch_op.f('ix_customer_customer_code'))
        batch_op.drop_index(batch_op.f('ix_customer_contact_no'))
        batch_op.drop_index('idx_customer_name_contact_email')

    op.drop_table('customer')
    with op.batch_alter_table('booking', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_booking_start_date'))
        batch_op.drop_index(batch_op.f('ix_booking_customer_name'))
        batch_op.drop_index(batch_op.f('ix_booking_booking_code'))
        batch_op.drop_index('idx_booking_code_customer_date')

    op.drop_table('booking')
    with op.batch_alter_table('setting', schema=None) as batch_op:
        batch_op.drop_index('idx_setting_group_key')

    op.drop_table('setting')
    with op.batch_alter_table('employee', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_employee_name'))
        batch_op.drop_index(batch_op.f('ix_employee_employee_code'))
        batch_op.drop_index(batch_op.f('ix_employee_email'))
        batch_op.drop_index(batch_op.f('ix_employee_designation'))
        batch_op.drop_index(batch_op.f('ix_employee_contact_no'))
        batch_op.drop_index('idx_employee_name_email_contact_designation')

    op.drop_table('employee')
    with op.batch_alter_table('channel_partner', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_channel_partner_partner_code'))
        batch_op.drop_index(batch_op.f('ix_channel_partner_name'))
        batch_op.drop_index(batch_op.f('ix_channel_partner_email'))
        batch_op.drop_index(batch_op.f('ix_channel_partner_contact_no'))
        batch_op.drop_index('idx_channel_partner_name_contact_email')

    op.drop_table('channel_partner')
    with op.batch_alter_table('b2c_lead', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_b2c_lead_status'))
        batch_op.drop_index(batch_op.f('ix_b2c_lead_enquiry_id'))
        batch_op.drop_index(batch_op.f('ix_b2c_lead_enquiry_date'))
        batch_op.drop_index(batch_op.f('ix_b2c_lead_email'))
        batch_op.drop_index(batch_op.f('ix_b2c_lead_contact_no'))
        batch_op.drop_index('idx_b2c_lead_enquiry_email_contact_status')

    op.drop_table('b2c_lead')
    with op.batch_alter_table('b2b_lead', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_b2b_lead_status'))
        batch_op.drop_index(batch_op.f('ix_b2b_lead_organization_name'))
        batch_op.drop_index(batch_op.f('ix_b2b_lead_organization_email'))
        batch_op.drop_index(batch_op.f('ix_b2b_lead_date'))
        batch_op.drop_index('idx_b2b_lead_org_email_status')

    op.drop_table('b2b_lead')
    with op.batch_alter_table('audit_log', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_audit_log_at'))

    op.drop_table('audit_log')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    # ### end Alembic commands ###
